import numpy as np

# Parse the data
data = {
    '16MB': {
        'cmek': [1.985, 2.416, 1.962, 2.150, 2.065, 1.878, 2.012, 1.986, 2.397, 2.178],
        'cmek-hsm': [1.997, 2.159, 1.895, 2.089, 2.071, 1.852, 2.130, 1.986, 2.384, 2.198],
        'csek': [1.023, 1.001, 0.982, 1.008, 0.948, 0.931, 0.975, 0.927, 1.020, 0.968],
        'keywrap': [0.697, 0.731, 0.701, 0.720, 0.713, 0.689, 0.742, 0.679, 0.731, 0.727],
        'strawman': [1.885, 2.009, 1.833, 1.904, 1.943, 1.746, 1.876, 1.748, 2.282, 1.945],
        'akeso': [1.140, 1.206, 1.231, 1.165, 1.177, 1.041, 1.051, 1.075, 1.169, 1.157]
    },
    '128MB': {
        'cmek': [14.605, 15.165, 15.223, 14.370, 14.538, 14.404, 14.714, 15.042, 15.342, 15.198],
        'cmek-hsm': [14.286, 15.221, 15.024, 14.369, 14.544, 14.169, 14.288, 14.931, 15.315, 15.200],
        'csek': [7.655, 7.536, 7.698, 7.649, 7.589, 7.375, 7.607, 7.612, 7.740, 7.607],
        'keywrap': [5.582, 5.609, 5.634, 5.626, 5.652, 5.508, 5.457, 5.734, 5.713, 5.613],
        'strawman': [15.721, 15.704, 15.689, 15.414, 15.752, 15.470, 14.886, 15.161, 15.197, 15.475],
        'akeso': [6.601, 6.505, 6.513, 6.552, 6.713, 6.334, 6.505, 6.488, 6.963, 6.569]
    },
    '512MB': {
        'cmek': [55.355, 57.474, 58.568, 57.193, 56.246, 55.457, 56.098, 60.594, 59.066, 58.244],
        'cmek-hsm': [56.348, 56.804, 57.124, 55.588, 55.305, 55.968, 56.188, 60.296, 59.992, 58.778],
        'csek': [30.503, 29.338, 29.235, 29.412, 30.029, 30.240, 28.629, 30.147, 29.661, 30.331],
        'keywrap': [21.283, 21.947, 21.494, 21.855, 22.165, 22.101, 21.146, 22.617, 22.148, 22.250],
        'strawman': [59.770, 63.279, 60.743, 61.259, 61.267, 60.353, 61.305, 61.634, 60.745, 61.515],
        'akeso': [23.929, 24.810, 24.250, 24.396, 24.305, 24.531, 24.231, 25.112, 24.552, 24.801]
    }, 
    "1GB": {
        "cmek": [113.159, 114.099, 116.15, 116.322, 112.93, 114.141, 123.258, 120.464, 115.069, 119.727],
        "cmek-hsm": [111.127, 111.291, 113.599, 112.555, 111.179, 115.834, 121.256, 118.381, 112.831, 116.675],
        "csek": [59.85, 58.671, 59.194, 58.52, 57.385, 58.801, 68.725, 61.382, 59.631, 60.523],
        "keywrap": [44.395, 42.49, 43.576, 43.094, 42.79, 43.096, 46.208, 46.091, 44.054, 45.383],
        "strawman": [124.724, 122.223, 127.969, 123.567, 119.625, 123.775, 131.343, 129.07, 124.834, 128.582],
        "akeso": [49.052, 54.082, 51.956, 47.9, 46.725, 49.43, 52.899, 53.479, 50.361, 50.853]
    },
    "10GB": {
        "cmek": [1077.059, 1036.076, 1074.692, 1064.722, 1068.488, 1076.095, 1157.999, 1098.154, 1112.484, 1156.729],
        "cmek-hsm": [1055.204, 1020.366, 1071.211, 1064.432, 1042.945, 1118.247, 1149.025, 1101.259, 1108.177, 1147.442],
        "csek": [584.14, 545.38, 575.145, 575.598, 577.037, 592.139, 620.447, 602.059, 596.313, 602.526],
        "keywrap": [429.01, 401.04, 433.149, 422.682, 422.188, 451.078, 447.09, 440.178, 447.957, 438.869],
        "strawman": [1190.513, 1153.772, 1195.003, 1190.811, 1162.614, 1273.52, 1251.163, 1218.506, 1227.033, 1217.329],
        "akeso": [479.612, 454.997, 480.575, 454.518, 454.645, 549.574, 516.272, 515.496, 506.823, 477.519]
    }
}

# Calculate means and standard errors, normalized by CMEK
with open('combined.dat', 'w') as f:
    f.write("#BucketSize\tcmek\tcmek_err\tcmek-hsm\tcmek-hsm_err\tcsek\tcsek_err\tkeywrap\tkeywrap_err\tstrawman\tstrawman_err\takeso\takeso_err\n")
    for size in data.keys():
        row = [size]  # Use the actual size directly
        
        # Calculate CMEK mean first (needed for normalization)
        cmek_values = np.array(data[size]['cmek'])
        cmek_mean = np.mean(cmek_values)
        
        for method in ['cmek', 'cmek-hsm', 'csek', 'keywrap', 'strawman', 'akeso']:
            values = np.array(data[size][method])
            mean = np.mean(values)
            std = np.std(values, ddof=1)
            print("%s %s Mean: %.3f STD: %.3f" % (method, size, mean, std))
            stderr = std / np.sqrt(len(values))
            
            # Normalize by CMEK mean
            normalized_mean = mean / cmek_mean
            normalized_stderr = stderr / cmek_mean
            
            row.extend([f"{normalized_mean:.4f}", f"{normalized_stderr:.4f}"])
        
        f.write("\t".join(row) + "\n")