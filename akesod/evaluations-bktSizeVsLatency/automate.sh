#!/bin/bash

# --- Configuration ---
# The exact, fixed name of the data file generated by your evaluations.go script

# Determine the strategy based on the first argument
if [ -n "$2" ]; then
  STRATEGY="$2"
else
  STRATEGY="cmek-cmek-hsm-csek-keywrap-strawman-akeso"
fi

# Define ORIGINAL_DATA_FILE
ORIGINAL_DATA_FILE="update-${STRATEGY}.dat"

# Define BASE_RENAMED_NAME by removing ".dat" from ORIGINAL_DATA_FILE
BASE_RENAMED_NAME="${ORIGINAL_DATA_FILE%.dat}"
# Base name for the renamed output files (the part before the number and extension)
# Extension for the data file
FILE_EXTENSION=".dat"

# Log file to record metadata (start/end times, status) for each run
METADATA_LOG_FILE="evaluation_runs_metadata.txt"

# Log file to append all standard output and standard error from evaluations.go
GO_PROGRAM_OUTPUT_LOG="complete.log"

# Number of times to run the Go program
NUM_RUNS=$1


# --- Script Start ---
echo "Starting $NUM_RUNS benchmark runs..."
echo "Run metadata will be logged to: $METADATA_LOG_FILE"
echo "Output from 'evaluations.go' for all runs will be appended to: $GO_PROGRAM_OUTPUT_LOG"

# Initialize or clear the metadata log file for this set of runs
echo "Evaluation Run Metadata - Script Started: $(date)" > "$METADATA_LOG_FILE"
echo "============================================" >> "$METADATA_LOG_FILE"
echo "Configuration:" >> "$METADATA_LOG_FILE"
echo "  Original data file: $ORIGINAL_DATA_FILE" >> "$METADATA_LOG_FILE"
echo "  Renamed file pattern: ${BASE_RENAMED_NAME}-<run_number>${FILE_EXTENSION}" >> "$METADATA_LOG_FILE"
echo "  Number of runs: $NUM_RUNS" >> "$METADATA_LOG_FILE"
echo "  Go program output log: $GO_PROGRAM_OUTPUT_LOG" >> "$METADATA_LOG_FILE"
echo "============================================" >> "$METADATA_LOG_FILE"

# Initialize or clear the Go program's combined output log
echo "Combined output from all 'evaluations.go' runs - Script Started: $(date)" > "$GO_PROGRAM_OUTPUT_LOG"
echo "======================================================================" >> "$GO_PROGRAM_OUTPUT_LOG"


for i in $(seq 1 $NUM_RUNS)
do
  echo # Blank line for better console readability between runs
  echo "----------------------------------------------------"
  echo "Initiating Run $i of $NUM_RUNS"
  # Log section header for this run in metadata log
  echo "" >> "$METADATA_LOG_FILE" # Blank line in metadata log
  echo "Run $i Metadata:" >> "$METADATA_LOG_FILE"

  # Record and print start time
  START_TIME_STR=$(date) # Captures date in 'Sun May 11 02:08:25 EDT 2025' format
  echo "$START_TIME_STR" # Print start time to console
  echo "Start Time: $START_TIME_STR" >> "$METADATA_LOG_FILE"

  # Inform the user about the Go program execution and where its output is going
  echo "Running: go run evaluations.go (Output is being appended to $GO_PROGRAM_OUTPUT_LOG)"

  # Add a separator to the Go program's output log for this specific run
  echo "" >> "$GO_PROGRAM_OUTPUT_LOG"
  echo "--- Starting Run $i of $NUM_RUNS at $START_TIME_STR ---" >> "$GO_PROGRAM_OUTPUT_LOG"

  # Execute the Go program, appending its standard output and standard error to GO_PROGRAM_OUTPUT_LOG
  go run evaluations.go prepare >> "$GO_PROGRAM_OUTPUT_LOG" 2>&1
  go run evaluations.go >> "$GO_PROGRAM_OUTPUT_LOG" 2>&1
  GO_EXIT_STATUS=$? # Capture exit status immediately

  # Add a footer to the Go program's output log for this run
  echo "--- Finished Run $i of $NUM_RUNS (Exit Status: $GO_EXIT_STATUS) ---" >> "$GO_PROGRAM_OUTPUT_LOG"
  echo "======================================================================" >> "$GO_PROGRAM_OUTPUT_LOG"


  # Record and print end time
  END_TIME_STR=$(date)
  echo "$END_TIME_STR" # Print end time to console
  echo "End Time: $END_TIME_STR" >> "$METADATA_LOG_FILE"

  # Construct the unique filename for the data file from this run
  RENAMED_DATA_FILE="${BASE_RENAMED_NAME}-${i}${FILE_EXTENSION}"

  # Log the Go program's execution status in the metadata log
  if [ $GO_EXIT_STATUS -eq 0 ]; then
    echo "Go Program Status: Successful (Exit Code 0)" >> "$METADATA_LOG_FILE"
  else
    # Print a warning to the console for immediate visibility if the Go program failed
    echo "WARNING: Go program for Run $i FAILED with exit status $GO_EXIT_STATUS. Check $GO_PROGRAM_OUTPUT_LOG for details." >&2
    echo "Go Program Status: FAILED (Exit Code $GO_EXIT_STATUS)" >> "$METADATA_LOG_FILE"
  fi

  # Attempt to rename the output file produced by the Go program
  if [ -f "$ORIGINAL_DATA_FILE" ]; then
    mv "$ORIGINAL_DATA_FILE" "$RENAMED_DATA_FILE"
    if [ $? -eq 0 ]; then
      SUCCESS_MSG="Output file '$ORIGINAL_DATA_FILE' successfully renamed to '$RENAMED_DATA_FILE'."
      echo "$SUCCESS_MSG" # Print success to console
      echo "File Operation: $SUCCESS_MSG" >> "$METADATA_LOG_FILE"
    else
      ERROR_MSG="CRITICAL ERROR: FAILED to rename '$ORIGINAL_DATA_FILE' to '$RENAMED_DATA_FILE' for Run $i. The file '$ORIGINAL_DATA_FILE' may still exist and could be overwritten. Manual intervention may be needed."
      echo "$ERROR_MSG" >&2
      echo "File Operation Error: $ERROR_MSG" >> "$METADATA_LOG_FILE"
    fi
  else
    WARNING_MSG="Expected output file '$ORIGINAL_DATA_FILE' was NOT found after Run $i. (Go program exit status: $GO_EXIT_STATUS). No file was renamed for this run."
    echo "$WARNING_MSG"
    echo "File Operation Info: $WARNING_MSG" >> "$METADATA_LOG_FILE"
  fi

  echo "Finished processing for Run $i of $NUM_RUNS."
  echo "----------------------------------------------------" # Console separator
done

echo # Blank line for console readability
echo "All $NUM_RUNS benchmark runs have been attempted."
echo "Detailed metadata for each run has been logged to: $METADATA_LOG_FILE"
echo "Combined output from all 'evaluations.go' runs is in: $GO_PROGRAM_OUTPUT_LOG"
# --- Script End ---